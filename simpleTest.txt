program testProg (input, output);
var a : real;
function testSub ( p : integer; q : real;
 r : array[0 .. 4] of integer; s : array[0 .. 4] of real ): integer ;
	var b : integer;
	var c : real;
	var d : array[0 .. 4] of integer;
	var e : array[0 .. 4] of real;
	begin
		b := 2 * 2;
		b := 2 * 2.0;
		b := 2.0 * 2;
		b := 2.0 * 2.0;
		c := 2 * 2;
		c := 2 * 2.0;
		c := 2.0 * 2;
		c := 2.0 * 2.0;	
		b := q * 2;
		b := 2 * q;
		b := q * q;
		b := q * 2.0;
		b := 2.0 * q;
		b := p * 2;
		b := 2 * p;
		b := p * p;
		b := p * 2.0;
		b := 2.0 * p;
		c := q * 2;
		c := 2 * q;
		c := q * q;
		c := q * 2.0;
		c := 2.0 * q;
		c := p * 2;
		c := 2 * p;
		c := p * p;
		c := p * 2.0;
		c := 2.0 * p;

		b := 2 / 2;
		b := 2 / 2.0;
		b := 2.0 / 2;
		b := 2.0 / 2.0;
		c := 2 / 2;
		c := 2 / 2.0;
		c := 2.0 / 2;
		c := 2.0 / 2.0;
		b := q / 2;
		b := 2 / q;
		b := q / q;
		b := q / 2.0;
		b := 2.0 / q;
		b := p / 2;
		b := 2 / p;
		b := p / p;
		b := p / 2.0;
		b := 2.0 / p;
		c := q / 2;
		c := 2 / q;
		c := q / q;
		c := q / 2.0;
		c := 2.0 / q;
		c := p / 2;
		c := 2 / p;
		c := p / p;
		c := p / 2.0;
		c := 2.0 / p;

		b := 2 or 2;
		b := 2 or 2.0;
		b := 2.0 or 2;
		b := 2.0 or 2.0;
		c := 2 or 2;
		c := 2 or 2.0;
		c := 2.0 or 2;
		c := 2.0 or 2.0;
		b := q or 2;
		b := 2 or q;
		b := q or q;
		b := q or 2.0;
		b := 2.0 or q;
		b := p or 2;
		b := 2 or p;
		b := p or p;
		b := p or 2.0;
		b := 2.0 or p;
		c := q or 2;
		c := 2 or q;
		c := q or q;
		c := q or 2.0;
		c := 2.0 or q;
		c := p or 2;
		c := 2 or p;
		c := p or p;
		c := p or 2.0;
		c := 2.0 or p;
			
		b := 2 mod 2;
		b := 2 mod 2.0;
		b := 2.0 mod 2;
		b := 2.0 mod 2.0;
		c := 2 mod 2;
		c := 2 mod 2.0;
		c := 2.0 mod 2;
		c := 2.0 mod 2.0;
		b := q mod 2;
		b := 2 mod q;
		b := q mod q;
		b := q mod 2.0;
		b := 2.0 mod q;
		b := p mod 2;
		b := 2 mod p;
		b := p mod p;
		b := p mod 2.0;
		b := 2.0 mod p;
		c := q mod 2;
		c := 2 mod q;
		c := q mod q;
		c := q mod 2.0;
		c := 2.0 mod q;
		c := p mod 2;
		c := 2 mod p;
		c := p mod p;
		c := p mod 2.0;
		c := 2.0 mod p;

		b := 2 and 2;
		b := 2 and 2.0;
		b := 2.0 and 2;
		b := 2.0 and 2.0;
		c := 2 and 2;
		c := 2 and 2.0;
		c := 2.0 and 2;
		c := 2.0 and 2.0;
		b := q and 2;
		b := 2 and q;
		b := q and q;
		b := q and 2.0;
		b := 2.0 and q;
		b := p and 2;
		b := 2 and p;
		b := p and p;
		b := p and 2.0;
		b := 2.0 and p;
		c := q and 2;
		c := 2 and q;
		c := q and q;
		c := q and 2.0;
		c := 2.0 and q;
		c := p and 2;
		c := 2 and p;
		c := p and p;
		c := p and 2.0;
		c := 2.0 and p;

		b := 2 + 2;
		b := 2 + 2.0;
		b := 2.0 + 2;
		b := 2.0 + 2.0;
		c := 2 + 2;
		c := 2 + 2.0;
		c := 2.0 + 2;
		c := 2.0 + 2.0;
		b := q + 2;
		b := 2 + q;
		b := q + q;
		b := q + 2.0;
		b := 2.0 + q;
		b := p + 2;
		b := 2 + p;
		b := p + p;
		b := p + 2.0;
		b := 2.0 + p;
		c := q + 2;
		c := 2 + q;
		c := q + q;
		c := q + 2.0;
		c := 2.0 + q;
		c := p + 2;
		c := 2 + p;
		c := p + p;
		c := p + 2.0;
		c := 2.0 + p;
		
		b := 2 - 2;
		b := 2 - 2.0;
		b := 2.0 - 2;
		b := 2.0 - 2.0;
		c := 2 - 2;
		c := 2 - 2.0;
		c := 2.0 - 2;
		c := 2.0 - 2.0;
		b := q - 2;
		b := 2 - q;
		b := q - q;
		b := q - 2.0;
		b := 2.0 - q;
		b := p - 2;
		b := 2 - p;
		b := p - p;
		b := p - 2.0;
		b := 2.0 - p;
		c := q - 2;
		c := 2 - q;
		c := q - q;
		c := q - 2.0;
		c := 2.0 - q;
		c := p - 2;
		c := 2 - p;
		c := p - p;
		c := p - 2.0;
		c := 2.0 - p;

		b := 2 div 2;
		b := 2 div 2.0;
		b := 2.0 div 2;
		b := 2.0 div 2.0;
		c := 2 div 2;
		c := 2 div 2.0;
		c := 2.0 div 2;
		c := 2.0 div 2.0;
		b := q div 2;
		b := 2 div q;
		b := q div q;
		b := q div 2.0;
		b := 2.0 div q;
		b := p div 2;
		b := 2 div p;
		b := p div p;
		b := p div 2.0;
		b := 2.0 div p;
		c := q div 2;
		c := 2 div q;
		c := q div q;
		c := q div 2.0;
		c := 2.0 div q;
		c := p div 2;
		c := 2 div p;
		c := p div p;
		c := p div 2.0;
		c := 2.0 div p;

		b := 2 * 2;
		b := 2 * 2.0;
		b := 2.0 * 2;
		b := 2.0 * 2.0;
		c := 2 * 2;
		c := 2 * 2.0;
		c := 2.0 * 2;
		c := 2.0 * 2.0;	
		b := c * 2;
		b := 2 * c;
		b := c * c;
		b := c * 2.0;
		b := 2.0 * c;
		b := b * 2;
		b := 2 * b;
		b := b * b;
		b := b * 2.0;
		b := 2.0 * b;
		c := c * 2;
		c := 2 * c;
		c := c * c;
		c := c * 2.0;
		c := 2.0 * c;
		c := b * 2;
		c := 2 * b;
		c := b * b;
		c := b * 2.0;
		c := 2.0 * b;

		b := 2 / 2;
		b := 2 / 2.0;
		b := 2.0 / 2;
		b := 2.0 / 2.0;
		c := 2 / 2;
		c := 2 / 2.0;
		c := 2.0 / 2;
		c := 2.0 / 2.0;
		b := c / 2;
		b := 2 / c;
		b := c / c;
		b := c / 2.0;
		b := 2.0 / c;
		b := b / 2;
		b := 2 / b;
		b := b / b;
		b := b / 2.0;
		b := 2.0 / b;
		c := c / 2;
		c := 2 / c;
		c := c / c;
		c := c / 2.0;
		c := 2.0 / c;
		c := b / 2;
		c := 2 / b;
		c := b / b;
		c := b / 2.0;
		c := 2.0 / b;

		b := 2 or 2;
		b := 2 or 2.0;
		b := 2.0 or 2;
		b := 2.0 or 2.0;
		c := 2 or 2;
		c := 2 or 2.0;
		c := 2.0 or 2;
		c := 2.0 or 2.0;
		b := c or 2;
		b := 2 or c;
		b := c or c;
		b := c or 2.0;
		b := 2.0 or c;
		b := b or 2;
		b := 2 or b;
		b := b or b;
		b := b or 2.0;
		b := 2.0 or b;
		c := c or 2;
		c := 2 or c;
		c := c or c;
		c := c or 2.0;
		c := 2.0 or c;
		c := b or 2;
		c := 2 or b;
		c := b or b;
		c := b or 2.0;
		c := 2.0 or b;

		b := 2 mod 2;
		b := 2 mod 2.0;
		b := 2.0 mod 2;
		b := 2.0 mod 2.0;
		c := 2 mod 2;
		c := 2 mod 2.0;
		c := 2.0 mod 2;
		c := 2.0 mod 2.0;
		b := c mod 2;
		b := 2 mod c;
		b := c mod c;
		b := c mod 2.0;
		b := 2.0 mod c;
		b := b mod 2;
		b := 2 mod b;
		b := b mod b;
		b := b mod 2.0;
		b := 2.0 mod b;
		c := c mod 2;
		c := 2 mod c;
		c := c mod c;
		c := c mod 2.0;
		c := 2.0 mod c;
		c := b mod 2;
		c := 2 mod b;
		c := b mod b;
		c := b mod 2.0;
		c := 2.0 mod b;

		b := 2 and 2;
		b := 2 and 2.0;
		b := 2.0 and 2;
		b := 2.0 and 2.0;
		c := 2 and 2;
		c := 2 and 2.0;
		c := 2.0 and 2;
		c := 2.0 and 2.0;
		b := c and 2;
		b := 2 and c;
		b := c and c;
		b := c and 2.0;
		b := 2.0 and c;
		b := b and 2;
		b := 2 and b;
		b := b and b;
		b := b and 2.0;
		b := 2.0 and b;
		c := c and 2;
		c := 2 and c;
		c := c and c;
		c := c and 2.0;
		c := 2.0 and c;
		c := b and 2;
		c := 2 and b;
		c := b and b;
		c := b and 2.0;
		c := 2.0 and b;

		b := 2 + 2;
		b := 2 + 2.0;
		b := 2.0 + 2;
		b := 2.0 + 2.0;
		c := 2 + 2;
		c := 2 + 2.0;
		c := 2.0 + 2;
		c := 2.0 + 2.0;
		b := c + 2;
		b := 2 + c;
		b := c + c;
		b := c + 2.0;
		b := 2.0 + c;
		b := b + 2;
		b := 2 + b;
		b := b + b;
		b := b + 2.0;
		b := 2.0 + b;
		c := c + 2;
		c := 2 + c;
		c := c + c;
		c := c + 2.0;
		c := 2.0 + c;
		c := b + 2;
		c := 2 + b;
		c := b + b;
		c := b + 2.0;
		c := 2.0 + b;
		
		b := 2 - 2;
		b := 2 - 2.0;
		b := 2.0 - 2;
		b := 2.0 - 2.0;
		c := 2 - 2;
		c := 2 - 2.0;
		c := 2.0 - 2;
		c := 2.0 - 2.0;
		b := c - 2;
		b := 2 - c;
		b := c - c;
		b := c - 2.0;
		b := 2.0 - c;
		b := b - 2;
		b := 2 - b;
		b := b - b;
		b := b - 2.0;
		b := 2.0 - b;
		c := c - 2;
		c := 2 - c;
		c := c - c;
		c := c - 2.0;
		c := 2.0 - c;
		c := b - 2;
		c := 2 - b;
		c := b - b;
		c := b - 2.0;
		c := 2.0 - b;

		b := 2 div 2;
		b := 2 div 2.0;
		b := 2.0 div 2;
		b := 2.0 div 2.0;
		c := 2 div 2;
		c := 2 div 2.0;
		c := 2.0 div 2;
		c := 2.0 div 2.0;
		b := c div 2;
		b := 2 div c;
		b := c div c;
		b := c div 2.0;
		b := 2.0 div c;
		b := b div 2;
		b := 2 div b;
		b := b div b;
		b := b div 2.0;
		b := 2.0 div b;
		c := c div 2;
		c := 2 div c;
		c := c div c;
		c := c div 2.0;
		c := 2.0 div c;
		c := b div 2;
		c := 2 div b;
		c := b div b;
		c := b div 2.0;
		c := 2.0 div b;

		while((b >= c) and (c > b) or (c < 1) or (b > 2.0) or (c < 1.0)) do
			b := 1;
		if((c >= b) and (2 > b) or (1 < c) or (2.0 > b) or (1.0 < c)) then
			b := 1;
			
		if((a > q) and (a > r) and (b > q) and (b > r)) then
			b := 1;
		if((q > a) or (r > a) or (q > b) or (r > b)) then
			b := 1;

		b := d[0];
		b := d[0+1];
		b := d[b];
		b := d[c];
		b := d[p];
		b := d[q];
		b := d[d];

		c := d[0];
		c := d[0+1];
		c := d[c];
		c := d[c];
		c := d[p];
		c := d[q];
		c := d[d];

		b := e[0];
		b := e[0+1];
		b := e[b];
		b := e[c];
		b := e[p];
		b := e[q];
		b := e[e];

		c := e[0];
		c := e[0+1];
		c := e[c];
		c := e[c];
		c := e[p];
		c := e[q];
		c := e[e];

		b := r[0];
		b := r[0+1];
		b := r[b];
		b := r[c];
		b := r[p];
		b := r[q];
		b := r[r];

		c := r[0];
		c := r[0+1];
		c := r[c];
		c := r[c];
		c := r[p];
		c := r[q];
		c := r[r];

		b := e[0];
		b := e[0+1];
		b := e[b];
		b := e[c];
		b := e[p];
		b := e[q];
		b := e[e];

		c := e[0];
		c := e[0+1];
		c := e[c];
		c := e[c];
		c := e[p];
		c := e[q];
		c := e[e];

		s[0] := 1;
		s[0] := 1.0;
		s[0] := 1+1;
		s[0] := 1+1.0;
		s[0] := b;
		s[0] := c;
		s[0] := d; 
		s[0] := e;
		s[0] := p;
		s[0] := r;
		s[0] := s;
		s[0] := q;
		s[0] := 1>9;


		r[0] := 1;
		r[0] := 1.0;
		r[0] := 1+1;
		r[0] := 1+1.0;
		r[0] := b;
		r[0] := c;
		r[0] := d; 
		r[0] := e;
		r[0] := p;
		r[0] := r;
		r[0] := r;
		r[0] := q;
		r[0] := 1>9;

		d[0] := 1;
		d[0] := 1.0;
		d[0] := 1+1;
		d[0] := 1+1.0;
		d[0] := b;
		d[0] := c;
		d[0] := d; 
		d[0] := e;
		d[0] := p;
		d[0] := r;
		d[0] := d;
		d[0] := q;
		d[0] := 1>9;

		
		e[0] := 1;
		e[0] := 1.0;
		e[0] := 1+1;
		e[0] := 1+1.0;
		e[0] := b;
		e[0] := c;
		e[0] := d; 
		e[0] := e;
		e[0] := p;
		e[0] := e;
		e[0] := e;
		e[0] := q;
		e[0] := 1>9

	end;	
begin
	a := 3;
	a := 4.0;
	p := 5
end .